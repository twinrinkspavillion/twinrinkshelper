@page
@model DP.TwinRinksHelper.Web.Pages.CompareScheduleModel
@{
    ViewData["Title"] = "Compare/Sync Schedule";
}
<div class="panel panel-default" style="margin-top:10px">
    <div class="panel-heading">Compare/Sync Schedule</div>
    <div class="panel-body">
        <form method="post">
            <fieldset>
                <div class="form-group">
                    <label>TeamSnap Team:</label>
                    @Html.DropDownListFor(m => m.SelectedTeamSnapTeamId, Model.GetTeamSnapTeamsItems())
                </div>
                <div class="form-group">
                    <label>TwinRinks Team:</label>
                    @Html.DropDownListFor(m => m.SelectedTwinRinksTeam, Model.GetTwinRinksTeamsItems())
                </div>
                <button type="submit" class="btn btn-primary">Compare</button>
            </fieldset>
        </form>
    </div>
</div>

@if (Model.CompareResults != null)
{

    @if (Model.CompareResults.Any())
    {
        <div class="panel panel-warning" style="margin:10px">
            <div class="panel-heading">
                <h3 class="panel-title">Result @Model.CompareResults.Count()</h3>
            </div>
            <div class="panel-body">
                @Html.Raw(Html.ToHtmlTable(@Model.CompareResults, "results", selectorGenerator: (r) => r.Type == ScheduleComparer.DifferenceType.NotInTeamSnap ? $"{r.TR_EventTime.GetValueOrDefault().Ticks}_{r.TR_EventType}_{r.TR_Location}" : ""))
                <form method="post" action="~/CreateEvents">
                    <input id="selectedEvents" name="SelectedEvents" type="hidden" value="test">
                    <input name="SelectedTeamSnapTeamId" type="hidden" value="@Model.SelectedTeamSnapTeamId" />
                    <input name="SelectedTwinRinksTeam" type="hidden" value="@Model.SelectedTwinRinksTeam" />
                    <div class="alert alert-dismissible alert-danger" id="alert" style="display:none">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <strong>Oh snap!</strong> Must select at least one event to create!
                    </div>
                    <button type="submit" class="btn btn-primary" onclick="return postCreateEvents();">Create Events</button>
                </form>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-dismissible alert-success" id="alert">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>No differences found!</strong>
        </div>
    }
}

@section Scripts
    {
    <script type="text/javascript">
        function postCreateEvents() {

            let selected = $("#results").find(".chk-select:checked").map(function () {
                return this.id;
            }).get().join("|");

            if (selected === "") {

                $("#alert").show();

                return false;
            }

            $("#selectedEvents").val(selected);

            return true;
        }
    </script>
}